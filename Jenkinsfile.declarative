def imageName = 'mlabouardy/movies-parser'
def myImageName = 'monarene/movies-parser'

pipeline {
    agent any 

    stages {
        stage('Checkout'){
            steps{
                checkout scm
            }
        }

        stage('Run Tests') {
            parallel {
                stage('Quality Tests'){
                    steps{
                    script {
                        def imageTest= docker.build("${imageName}-test", "-f Dockerfile.test .")
                        imageTest.inside{
                            sh 'echo "Quality tests"'
                        }

                    }
                }
            }

            stage('Unit Tests'){
                    steps{
                    script {
                        def imageTest= docker.build("${imageName}-test", "-f Dockerfile.test .")
                        imageTest.inside{
                            sh 'echo "Unit tests"'
                        }

                    }
                }
            }

            stage('Security Tests'){
                    steps{
                    script {
                        def imageTest= docker.build("${imageName}-test", "-f Dockerfile.test .")
                        imageTest.inside{
                            sh 'echo "Security tests"'
                        }

                    }
                }
            }
            }
        }

        stage('Build'){
            steps{
                script {
                    dockerImage = docker.build(myImageName)
                }
            }
        }

        stage('Push'){

            steps{
                script {

                    withDockerRegistry([credentialsId: "dockerhub", url: "" ]) {
                    dockerImage.push(commitID())
                    if (env.BRANCH_NAME == 'develop') {
                    dockerImage.push('develop')
                }
            
            }

        }}}
}

}


def commitID() {
    sh 'git rev-parse HEAD > .git/commitID'
    def commitID = readFile('.git/commitID').trim()
    sh 'rm .git/commitID'
    commitID
}